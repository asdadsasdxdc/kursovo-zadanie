{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\nz111\\\\kursovo-zadanie\\\\EventEditForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { formatDate } from \"./util\";\nimport { editEvent, getEventById } from \"./EventService\";\n\nvar EventEditForm = function (_Component) {\n  _inherits(EventEditForm, _Component);\n\n  var _super = _createSuper(EventEditForm);\n\n  function EventEditForm() {\n    var _this;\n\n    _classCallCheck(this, EventEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      date: Date.now(),\n      showDatePicker: false\n    };\n\n    _this.handleChangeTitle = function (value) {\n      _this.setState({\n        title: value\n      });\n    };\n\n    _this.handleChangeDescription = function (value) {\n      _this.setState({\n        description: value\n      });\n    };\n\n    _this.handleDatePress = function () {\n      _this.setState({\n        showDatePicker: true\n      });\n    };\n\n    _this.handleDatePickerHide = function () {\n      _this.setState({\n        showDatePicker: false\n      });\n    };\n\n    _this.handleDatePicked = function (event, selectedDate) {\n      var currentDate = selectedDate || _this.state.date;\n\n      _this.setState({\n        date: currentDate\n      });\n\n      _this.handleDatePickerHide();\n    };\n\n    return _this;\n  }\n\n  _createClass(EventEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var eventId = this.props.route.params[\"id\"];\n      getEventById(eventId).then(function (item) {\n        _this2.setState({\n          id: item._id,\n          title: item.title,\n          date: item.date,\n          description: item.description\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\u0417\\u0430\\u0433\\u043B\\u0430\\u0432\\u0438\\u0435\",\n        value: this.state.title,\n        onChangeText: this.handleChangeTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Event date\",\n        value: formatDate(this.state.date),\n        editable: !this.state.showDatePicker,\n        onFocus: this.handleDatePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), this.state.showDatePicker && React.createElement(DateTimePicker, {\n        value: this.state.date,\n        mode: \"datetime\",\n        is24Hour: true,\n        onChange: this.handleDatePicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n        value: this.state.description,\n        onChangeText: this.handleChangeDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0430\\u0439\",\n        onPress: function onPress() {\n          editEvent({\n            id: _this3.state.id,\n            title: _this3.state.title,\n            date: formatDate(_this3.state.date),\n            description: _this3.state.description\n          }).then(function () {\n            return _this3.props.navigation.goBack();\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return EventEditForm;\n}(Component);\n\nexport default EventEditForm;\nvar styles = StyleSheet.create({\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 10,\n    marginTop: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/nz111/kursovo-zadanie/EventEditForm.js"],"names":["React","Component","DateTimePicker","formatDate","editEvent","getEventById","EventEditForm","state","date","Date","now","showDatePicker","handleChangeTitle","value","setState","title","handleChangeDescription","description","handleDatePress","handleDatePickerHide","handleDatePicked","event","selectedDate","currentDate","eventId","props","route","params","then","item","id","_id","styles","textInput","navigation","goBack","StyleSheet","create","backgroundColor","padding","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Button, TextInput, StyleSheet } from \"react-native\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { formatDate } from \"./util\";\r\nimport { editEvent, getEventById } from \"./EventService\";\r\n\r\nclass EventEditForm extends Component {\r\n  state = {\r\n    date: Date.now(),\r\n    showDatePicker: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const eventId = this.props.route.params[\"id\"];\r\n    getEventById(eventId)\r\n    .then(item => {\r\n        this.setState({\r\n            id: item._id,\r\n            title: item.title,\r\n            date: item.date,\r\n            description: item.description\r\n        })\r\n    })\r\n  }\r\n\r\n  handleChangeTitle = (value) => {\r\n    this.setState({ title: value });\r\n  };\r\n\r\n  handleChangeDescription = (value) => {\r\n    this.setState({ description: value });\r\n  };\r\n\r\n  handleDatePress = () => {\r\n    this.setState({ showDatePicker: true });\r\n  };\r\n    handleDatePickerHide = () => {\r\n    this.setState({ showDatePicker: false });\r\n  };\r\n    handleDatePicked = (event, selectedDate) => {\r\n    const currentDate = selectedDate || this.state.date;\r\n    this.setState({ date: currentDate });\r\n    this.handleDatePickerHide();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Заглавие\"\r\n          value={this.state.title}\r\n          onChangeText={this.handleChangeTitle}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Event date\"\r\n          value={formatDate(this.state.date)}\r\n          editable={!this.state.showDatePicker}\r\n          onFocus={this.handleDatePress}\r\n        />\r\n        {this.state.showDatePicker && (\r\n          <DateTimePicker\r\n            value={this.state.date}\r\n            mode=\"datetime\"\r\n            is24Hour={true}\r\n            onChange={this.handleDatePicked}\r\n          />\r\n        )}\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Информация\"\r\n          value={this.state.description}\r\n          onChangeText={this.handleChangeDescription}\r\n        />\r\n        <Button\r\n          title=\"Редактирай\"\r\n          onPress={() => {\r\n            editEvent({\r\n              id: this.state.id,\r\n              title: this.state.title,\r\n              date: formatDate(this.state.date),\r\n              description: this.state.description,\r\n            }).then(() => this.props.navigation.goBack());\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default EventEditForm;\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}