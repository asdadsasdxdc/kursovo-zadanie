{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport moment from 'moment';\nimport uuid from 'uuid';\nvar BASE_URL = 'https://test1-7106.restdb.io/rest/tree';\nvar API_KEY = '62b1d019049b6811f7da3cd1';\nexport function getEvents() {\n  return fetch(BASE_URL, {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (events) {\n    return events.map(function (item) {\n      return _objectSpread(_objectSpread({}, item), {}, {\n        date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate()\n      });\n    });\n  });\n}\nexport function getEventById(id) {\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate()\n    });\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function addEvent(_ref) {\n  var title = _ref.title,\n      date = _ref.date,\n      description = _ref.description;\n  return fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    },\n    body: JSON.stringify({\n      title: title,\n      date: date,\n      description: description,\n      id: uuid()\n    })\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function editEvent(_ref2) {\n  var id = _ref2.id,\n      title = _ref2.title,\n      date = _ref2.date,\n      description = _ref2.description;\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    },\n    body: JSON.stringify({\n      title: title,\n      date: date,\n      description: description\n    })\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nexport function deleteEvent(id) {\n  return fetch(BASE_URL + \"/\" + id, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n      'x-apikey': API_KEY\n    }\n  }).then(function (result) {\n    return result.json();\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}","map":{"version":3,"sources":["C:/Users/nz111/kursovo-zadanie/EventService.js"],"names":["moment","uuid","BASE_URL","API_KEY","getEvents","fetch","method","headers","then","response","json","events","map","item","date","toDate","getEventById","id","catch","error","console","addEvent","title","description","body","JSON","stringify","result","editEvent","deleteEvent"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport uuid from 'uuid';\r\n\r\nconst BASE_URL = 'https://test1-7106.restdb.io/rest/tree';\r\nconst API_KEY = '62b1d019049b6811f7da3cd1';\r\n\r\nexport function getEvents() {\r\n    return fetch(BASE_URL,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            }\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(events => events.map(item => ({\r\n        ...item,\r\n        date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate(),\r\n    })));\r\n}\r\n\r\nexport function getEventById(id) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            }\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(item => {\r\n        return {\r\n            ...item,\r\n            date: moment(item.date, \"DD/MM/YYYY HH:mm\").toDate()\r\n        }\r\n    })\r\n    .catch(error => console.error(error));    \r\n}\r\n\r\n\r\nexport function addEvent({title, date, description}) {\r\n    return fetch(BASE_URL,\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            },\r\n            body: JSON.stringify({\r\n                title, date, description, id: uuid()\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\n\r\nexport function editEvent({id, title, date, description}) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            },\r\n            body: JSON.stringify({\r\n                title, date, description\r\n            })\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}\r\n\r\nexport function deleteEvent(id) {\r\n    return fetch(`${BASE_URL}/${id}`,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'x-apikey': API_KEY\r\n            }\r\n        })\r\n        .then(result => result.json())\r\n        .catch(error => console.error(error));\r\n}"]},"metadata":{},"sourceType":"module"}